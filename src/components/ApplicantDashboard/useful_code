



          {(info.stage === 1 && passFirstStage === true) ||
          (info.stage === 2 && passSecondStage === true) ||
          (info.stage === 3 && passFinalStage === true) ? (
            <div className={css.stepPassed}>
              <div className={css.astronautFlag}>
                <img src="/astronaut.png" />
              </div>
              {/* <div className={css.congratsMessage}>
                {" "}
                You passed Stage {info.stage}!
              </div> */}
            </div>
          ) : null}








          {/* <button onClick={() => changeStage(info)}> Pass </button> */}
          <div
            className={
              info.stage === 1 || info.stage === 2
                ? css.stageTitle
                : css.finalStageTitle
            }
          >
            {" "}
            Stage {info.stage}
          </div>

          <div className={css.progressImgContainer}>
            <img className={css.earthGlobe} src="/earth-globe.png" />
            <img
              className={css.rocketImage}
              src={rocket}
              alt="rocket icon"
              style={{
                width: "100px",
                height: "100px",
                position: "absolute",
                left: `${info.progression}%`,
                bottom: `${info.progression}%`,
                animation: `${css[`rocketFlight${info.progression}`]} 2s`
              }}
            />
          </div>
          <div onClick={() => redirectTo(info.stage)} className={css.stepCard}>
            <h3> {info.title}</h3>
            <p> {info.desc} </p>
          </div>
        </div>
      );
    };
    console.log(css);
    return stepInfo.map(addProgressionMock).map(renderStep);
  };







  const addProgressionMock = (info, idx) => ({
    progression: (idx + 1) * 25,
    ...info
  });